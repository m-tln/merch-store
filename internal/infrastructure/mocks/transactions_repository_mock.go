// Code generated by MockGen. DO NOT EDIT.
// Source: merch-store/internal/repository (interfaces: TransactionsRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "merch-store/internal/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTransactionsRepository is a mock of TransactionsRepository interface.
type MockTransactionsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionsRepositoryMockRecorder
}

// MockTransactionsRepositoryMockRecorder is the mock recorder for MockTransactionsRepository.
type MockTransactionsRepositoryMockRecorder struct {
	mock *MockTransactionsRepository
}

// NewMockTransactionsRepository creates a new mock instance.
func NewMockTransactionsRepository(ctrl *gomock.Controller) *MockTransactionsRepository {
	mock := &MockTransactionsRepository{ctrl: ctrl}
	mock.recorder = &MockTransactionsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionsRepository) EXPECT() *MockTransactionsRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTransactionsRepository) Create(arg0 *domain.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockTransactionsRepositoryMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTransactionsRepository)(nil).Create), arg0)
}

// GetTransactionsByIDFrom mocks base method.
func (m *MockTransactionsRepository) GetTransactionsByIDFrom(arg0 int) ([]domain.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactionsByIDFrom", arg0)
	ret0, _ := ret[0].([]domain.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactionsByIDFrom indicates an expected call of GetTransactionsByIDFrom.
func (mr *MockTransactionsRepositoryMockRecorder) GetTransactionsByIDFrom(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionsByIDFrom", reflect.TypeOf((*MockTransactionsRepository)(nil).GetTransactionsByIDFrom), arg0)
}

// GetTransactionsByIDTo mocks base method.
func (m *MockTransactionsRepository) GetTransactionsByIDTo(arg0 int) ([]domain.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactionsByIDTo", arg0)
	ret0, _ := ret[0].([]domain.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactionsByIDTo indicates an expected call of GetTransactionsByIDTo.
func (mr *MockTransactionsRepositoryMockRecorder) GetTransactionsByIDTo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionsByIDTo", reflect.TypeOf((*MockTransactionsRepository)(nil).GetTransactionsByIDTo), arg0)
}
