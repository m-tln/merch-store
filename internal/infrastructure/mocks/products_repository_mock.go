// Code generated by MockGen. DO NOT EDIT.
// Source: merch-store/internal/repository (interfaces: ProductsRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "merch-store/internal/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockProductsRepository is a mock of ProductsRepository interface.
type MockProductsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockProductsRepositoryMockRecorder
}

// MockProductsRepositoryMockRecorder is the mock recorder for MockProductsRepository.
type MockProductsRepositoryMockRecorder struct {
	mock *MockProductsRepository
}

// NewMockProductsRepository creates a new mock instance.
func NewMockProductsRepository(ctrl *gomock.Controller) *MockProductsRepository {
	mock := &MockProductsRepository{ctrl: ctrl}
	mock.recorder = &MockProductsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProductsRepository) EXPECT() *MockProductsRepositoryMockRecorder {
	return m.recorder
}

// FindByID mocks base method.
func (m *MockProductsRepository) FindByID(arg0 int) (*domain.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByID", arg0)
	ret0, _ := ret[0].(*domain.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByID indicates an expected call of FindByID.
func (mr *MockProductsRepositoryMockRecorder) FindByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockProductsRepository)(nil).FindByID), arg0)
}

// FindByName mocks base method.
func (m *MockProductsRepository) FindByName(arg0 string) (*domain.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByName", arg0)
	ret0, _ := ret[0].(*domain.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByName indicates an expected call of FindByName.
func (mr *MockProductsRepositoryMockRecorder) FindByName(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByName", reflect.TypeOf((*MockProductsRepository)(nil).FindByName), arg0)
}
