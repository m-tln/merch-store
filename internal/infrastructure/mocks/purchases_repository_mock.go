// Code generated by MockGen. DO NOT EDIT.
// Source: merch-store/internal/repository (interfaces: PurchasesRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "merch-store/internal/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPurchasesRepository is a mock of PurchasesRepository interface.
type MockPurchasesRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPurchasesRepositoryMockRecorder
}

// MockPurchasesRepositoryMockRecorder is the mock recorder for MockPurchasesRepository.
type MockPurchasesRepositoryMockRecorder struct {
	mock *MockPurchasesRepository
}

// NewMockPurchasesRepository creates a new mock instance.
func NewMockPurchasesRepository(ctrl *gomock.Controller) *MockPurchasesRepository {
	mock := &MockPurchasesRepository{ctrl: ctrl}
	mock.recorder = &MockPurchasesRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPurchasesRepository) EXPECT() *MockPurchasesRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockPurchasesRepository) Create(arg0 *domain.Purchase) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockPurchasesRepositoryMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPurchasesRepository)(nil).Create), arg0)
}

// FindByUserID mocks base method.
func (m *MockPurchasesRepository) FindByUserID(arg0 int) ([]domain.Purchase, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByUserID", arg0)
	ret0, _ := ret[0].([]domain.Purchase)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByUserID indicates an expected call of FindByUserID.
func (mr *MockPurchasesRepositoryMockRecorder) FindByUserID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByUserID", reflect.TypeOf((*MockPurchasesRepository)(nil).FindByUserID), arg0)
}
